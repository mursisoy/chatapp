version: '3.0'
volumes:
  node_modules:

services:
  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: chatapp
      POSTGRES_USER: chatapp
      POSTGRES_PASSWORD: chatapp
#    volumes:
#      - db-data:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - "18080:8080"

  caddy:
      image: caddy:2.6.4
      restart: unless-stopped
      volumes:
        - ./caddy/Caddyfile_debug:/etc/caddy/Caddyfile
      ports:
        - "80:80"
        - "443:443"

  frontend:
      build:
        context: ./chatapp-frontend
        dockerfile: Dockerfile_dev
      volumes:
        - type: bind
          source: ./chatapp-frontend
          target: /app
#        - node_modules:/app/node_modules

  backend:
    image: chatapp-backend:0.0.1-SNAPSHOT-debug
    depends_on:
      db:
          condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      BPL_DEBUG_ENABLED: true

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - ./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
#      - rabbitmq-data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"